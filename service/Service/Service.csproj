<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net8.0</TargetFramework>
        <OutputType>Exe</OutputType>
        <!-- Avoid using the ".Service" file extension, which would cause the app to hang on macOS, and use ".ServiceAssembly" instead -->
        <AssemblyName>Microsoft.KernelMemory.ServiceAssembly</AssemblyName>
        <RootNamespace>Microsoft.KernelMemory.Service</RootNamespace>
        <NoWarn>$(NoWarn);CA2007;CA1724;CA2254;CA1031;CS1591;CA1861;CA1303;SKEXP0001;</NoWarn>
    </PropertyGroup>

    <ItemGroup>
        <ProjectReference Include="..\..\extensions\AzureAIDocIntel\AzureAIDocIntel.csproj" />
        <ProjectReference Include="..\..\extensions\AzureAISearch\AzureAISearch\AzureAISearch.csproj" />
        <ProjectReference Include="..\..\extensions\AzureBlobs\AzureBlobs.csproj" />
        <ProjectReference Include="..\..\extensions\AzureOpenAI\AzureOpenAI.csproj" />
        <ProjectReference Include="..\..\extensions\AzureQueues\AzureQueues.csproj" />
        <ProjectReference Include="..\..\extensions\LlamaSharp\LlamaSharp\LlamaSharp.csproj" />
        <ProjectReference Include="..\..\extensions\MongoDbAtlas\MongoDbAtlas\MongoDbAtlas.csproj" />
        <ProjectReference Include="..\..\extensions\OpenAI\OpenAI.csproj" />
        <ProjectReference Include="..\..\extensions\Postgres\Postgres\Postgres.csproj" />
        <ProjectReference Include="..\..\extensions\Qdrant\Qdrant\Qdrant.csproj" />
        <ProjectReference Include="..\..\extensions\RabbitMQ\RabbitMQ.csproj" />
        <ProjectReference Include="..\..\extensions\Redis\Redis\Redis.csproj" />
        <ProjectReference Include="..\Abstractions\Abstractions.csproj" />
        <ProjectReference Include="..\Service.AspNetCore\Service.AspNetCore.csproj" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.ApplicationInsights.AspNetCore" />
        <PackageReference Include="Swashbuckle.AspNetCore" />
    </ItemGroup>

    <Import Project="../../code-analysis.props" />

    <!--
    This dependency is needed only to generate appsetting.development.json via

    "dotnet run setup"


    You can safely remove this reference, removing also this code from Program.cs:

        if (new[] { "setup", "-setup" }.Contains(args.FirstOrDefault(), StringComparer.OrdinalIgnoreCase))
        {
            Main.InteractiveSetup(cfgService: true);
        }
    -->
    <ItemGroup>
        <ProjectReference Include="..\..\tools\InteractiveSetup\InteractiveSetup.csproj" />
    </ItemGroup>

    <ItemGroup>
        <None Remove="setup.sh" />
        <Content Include="setup.sh">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </Content>
    </ItemGroup>

</Project>