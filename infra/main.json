{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.26.170.59819",
      "templateHash": "1331474399750243741"
    }
  },
  "parameters": {
    "suffix": {
      "type": "string",
      "defaultValue": "[substring(newGuid(), 0, 6)]",
      "minLength": 4,
      "maxLength": 6,
      "metadata": {
        "description": "Suffix to create unique resource names; 4-6 characters. Default is a random 6 characters."
      }
    },
    "chatGptDeploymentCapacity": {
      "type": "int",
      "defaultValue": 30,
      "minValue": 1,
      "maxValue": 40,
      "metadata": {
        "description": "gpt-35-turbo-16k deployment model\\'s Tokens-Per-Minute (TPM) capacity, measured in thousands.\nThe default capacity is 30,000 TPM. \nFor model limits specific to your region, refer to the documentation at https://learn.microsoft.com/azure/ai-services/openai/concepts/models#standard-deployment-model-quota.\n"
      }
    },
    "embeddingDeploymentCapacity": {
      "type": "int",
      "defaultValue": 30,
      "minValue": 1,
      "maxValue": 40,
      "metadata": {
        "description": "text-embedding-ada-002 deployment model\\'s Tokens-Per-Minute (TPM) capacity, measured in thousands.\nThe default capacity is 30,000 TPM.\nFor model limits specific to your region, refer to the documentation at https://learn.microsoft.com/azure/ai-services/openai/concepts/models#standard-deployment-model-quota.\n"
      }
    },
    "WebServiceAuthorizationKey1": {
      "type": "securestring",
      "minLength": 32,
      "maxLength": 128,
      "metadata": {
        "description": "PLEASE CHOOSE A SECURE AND SECRET KEY ! -\nKernel Memory Service Authorization AccessKey 1.\nThe value is stored as an environment variable and is required by the web service to authenticate HTTP requests.\n"
      }
    },
    "WebServiceAuthorizationKey2": {
      "type": "securestring",
      "minLength": 32,
      "maxLength": 128,
      "metadata": {
        "description": "PLEASE CHOOSE A SECURE AND SECRET KEY ! -\nKernel Memory Service Authorization AccessKey 2.\nThe value is stored as an environment variable and is required by the web service to authenticate HTTP requests.\n"
      }
    }
  },
  "variables": {
    "rg": "[resourceGroup()]",
    "location": "[resourceGroup().location]",
    "chatGpt": {
      "modelName": "gpt-35-turbo-16k",
      "deploymentName": "chat",
      "deploymentVersion": "0613",
      "deploymentCapacity": "[parameters('chatGptDeploymentCapacity')]"
    },
    "embedding": {
      "modelName": "text-embedding-ada-002",
      "deploymentName": "embedding",
      "deploymentVersion": "2",
      "deploymentCapacity": "[parameters('embeddingDeploymentCapacity')]"
    },
    "openAiDeployments": [
      {
        "name": "[variables('chatGpt').deploymentName]",
        "model": {
          "format": "OpenAI",
          "name": "[variables('chatGpt').modelName]",
          "version": "[variables('chatGpt').deploymentVersion]"
        },
        "sku": {
          "name": "Standard",
          "capacity": "[variables('chatGpt').deploymentCapacity]"
        }
      },
      {
        "name": "[variables('embedding').deploymentName]",
        "model": {
          "format": "OpenAI",
          "name": "[variables('embedding').modelName]",
          "version": "[variables('embedding').deploymentVersion]"
        },
        "sku": {
          "name": "Standard",
          "capacity": "[variables('embedding').deploymentCapacity]"
        }
      }
    ]
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('managedidentity-{0}', parameters('suffix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "suffix": {
            "value": "[parameters('suffix')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "10309523882387137109"
            }
          },
          "parameters": {
            "suffix": {
              "type": "string",
              "defaultValue": "[uniqueString(resourceGroup().id)]"
            },
            "name": {
              "type": "string",
              "defaultValue": "[format('km-UAidentity-{0}', parameters('suffix'))]",
              "minLength": 2,
              "maxLength": 60,
              "metadata": {
                "description": "Managed Identity name."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for all resources."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-01-31",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(format('{0}contributor', resourceGroup().id))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name')), '2023-01-31').principalId]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "managedIdentityId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name'))]"
            },
            "managedIdentityPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name')), '2023-01-31').principalId]"
            },
            "managedIdentityClientId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name')), '2023-01-31').clientId]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('storage-{0}', parameters('suffix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "suffix": {
            "value": "[parameters('suffix')]"
          },
          "managedIdentityPrincipalId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('managedidentity-{0}', parameters('suffix'))), '2022-09-01').outputs.managedIdentityPrincipalId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "2779259654581077397"
            }
          },
          "parameters": {
            "suffix": {
              "type": "string",
              "defaultValue": "[uniqueString(resourceGroup().id)]"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. The tags to be assigned to the created resources."
              }
            },
            "storageAccountName": {
              "type": "string",
              "defaultValue": "[format('kmstorage{0}', parameters('suffix'))]",
              "metadata": {
                "description": "The name of the Azure Storage Account."
              }
            },
            "storageBlobContainerName": {
              "type": "string",
              "defaultValue": "smemory",
              "metadata": {
                "description": "The name of the Container in Azure Storage."
              }
            },
            "externalTasksQueueName": {
              "type": "string",
              "defaultValue": "[format('km-queue-{0}', parameters('suffix'))]",
              "metadata": {
                "description": "The name of the Queue in Azure Storage."
              }
            },
            "managedIdentityPrincipalId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-09-01",
              "name": "[parameters('storageAccountName')]",
              "tags": "[parameters('tags')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2"
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
              "name": "[guid(format('Storage Queue Data Contributor-{0}', parameters('suffix')))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '974c5e8b-45b9-4653-ba55-5f855dd0fb88')]",
                "principalId": "[parameters('managedIdentityPrincipalId')]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
              "name": "[guid(format('Storage Blob Data Contributor-{0}', parameters('suffix')))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
                "principalId": "[parameters('managedIdentityPrincipalId')]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
              "name": "[guid(format('Storage Blob Data Owner-{0}', parameters('suffix')))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b7e6dc6d-f1e8-4753-8033-0f276bb0955b')]",
                "principalId": "[parameters('managedIdentityPrincipalId')]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
              "name": "[guid(format('Storage Queue Data Message Sender-{0}', parameters('suffix')))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'c6a89b2d-59bc-44d0-9896-0f6e12d7b80a')]",
                "principalId": "[parameters('managedIdentityPrincipalId')]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
              "name": "[guid(format('// Storage Queue Data Message Processor-{0}', parameters('suffix')))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8a0f0c08-91a1-4084-bc3d-661d67233fed')]",
                "principalId": "[parameters('managedIdentityPrincipalId')]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2021-09-01",
              "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2021-09-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', parameters('storageBlobContainerName'))]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/queueServices",
              "apiVersion": "2021-09-01",
              "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
              "apiVersion": "2021-09-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', parameters('externalTasksQueueName'))]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('storageAccountName'), 'default')]"
              ]
            }
          ],
          "outputs": {
            "storageAccountName": {
              "type": "string",
              "metadata": {
                "description": "The storage account name."
              },
              "value": "[parameters('storageAccountName')]"
            },
            "blobContainerName": {
              "type": "string",
              "metadata": {
                "description": "The storage account name."
              },
              "value": "[parameters('storageBlobContainerName')]"
            },
            "queueName": {
              "type": "string",
              "metadata": {
                "description": "The storage account name."
              },
              "value": "[parameters('externalTasksQueueName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('managedidentity-{0}', parameters('suffix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('search-{0}', parameters('suffix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "name": {
            "value": "[format('km-search-{0}', parameters('suffix'))]"
          },
          "suffix": {
            "value": "[parameters('suffix')]"
          },
          "managedIdentityPrincipalId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('managedidentity-{0}', parameters('suffix'))), '2022-09-01').outputs.managedIdentityPrincipalId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "16481486745226370443"
            }
          },
          "parameters": {
            "managedIdentityPrincipalId": {
              "type": "string"
            },
            "suffix": {
              "type": "string",
              "defaultValue": "[uniqueString(resourceGroup().id)]"
            },
            "name": {
              "type": "string",
              "minLength": 2,
              "maxLength": 60,
              "metadata": {
                "description": "Service name must only contain lowercase letters, digits or dashes, cannot use dash as the first two or last one characters, cannot contain consecutive dashes, and is limited between 2 and 60 characters in length."
              }
            },
            "sku": {
              "type": "string",
              "defaultValue": "standard",
              "allowedValues": [
                "free",
                "basic",
                "standard",
                "standard2",
                "standard3",
                "storage_optimized_l1",
                "storage_optimized_l2"
              ],
              "metadata": {
                "description": "The pricing tier of the search service you want to create (for example, basic or standard)."
              }
            },
            "replicaCount": {
              "type": "int",
              "defaultValue": 1,
              "minValue": 1,
              "maxValue": 12,
              "metadata": {
                "description": "Replicas distribute search workloads across the service. You need at least two replicas to support high availability of query workloads (not applicable to the free tier)."
              }
            },
            "partitionCount": {
              "type": "int",
              "defaultValue": 1,
              "allowedValues": [
                1,
                2,
                3,
                4,
                6,
                12
              ],
              "metadata": {
                "description": "Partitions allow for scaling of document count as well as faster indexing by sharding your index over multiple search units."
              }
            },
            "hostingMode": {
              "type": "string",
              "defaultValue": "default",
              "allowedValues": [
                "default",
                "highDensity"
              ],
              "metadata": {
                "description": "Applicable only for SKUs set to standard3. You can set this property to enable a single, high density partition that allows up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for all resources."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Search/searchServices",
              "apiVersion": "2023-11-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('sku')]"
              },
              "properties": {
                "replicaCount": "[parameters('replicaCount')]",
                "partitionCount": "[parameters('partitionCount')]",
                "hostingMode": "[parameters('hostingMode')]",
                "authOptions": {
                  "aadOrApiKey": {}
                }
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Search/searchServices/{0}', parameters('name'))]",
              "name": "[guid(format('Search Index Data Contributor-{0}', parameters('suffix')))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8ebe5a00-799e-43f5-93ac-243d3dce84a7')]",
                "principalId": "[parameters('managedIdentityPrincipalId')]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Search/searchServices', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Search/searchServices/{0}', parameters('name'))]",
              "name": "[guid(format('Search Service Contributor-{0}', parameters('suffix')))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7ca78c08-252a-4471-8644-bb5ff32d4ba0')]",
                "principalId": "[parameters('managedIdentityPrincipalId')]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Search/searchServices', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "searchName": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('managedidentity-{0}', parameters('suffix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('openai-{0}', parameters('suffix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "suffix": {
            "value": "[parameters('suffix')]"
          },
          "managedIdentityPrincipalId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('managedidentity-{0}', parameters('suffix'))), '2022-09-01').outputs.managedIdentityPrincipalId.value]"
          },
          "name": {
            "value": "[format('km-openai-{0}', parameters('suffix'))]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "sku": {
            "value": {
              "name": "S0"
            }
          },
          "deployments": {
            "value": "[variables('openAiDeployments')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "7253571891387474171"
            },
            "description": "Creates an Azure Cognitive Services instance."
          },
          "parameters": {
            "suffix": {
              "type": "string",
              "defaultValue": "[uniqueString(resourceGroup().id)]"
            },
            "managedIdentityPrincipalId": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "customSubDomainName": {
              "type": "string",
              "defaultValue": "[parameters('name')]",
              "metadata": {
                "description": "The custom subdomain name used to access the API. Defaults to the value of the name parameter."
              }
            },
            "deployments": {
              "type": "array",
              "defaultValue": []
            },
            "kind": {
              "type": "string",
              "defaultValue": "OpenAI"
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "Enabled",
              "allowedValues": [
                "Enabled",
                "Disabled"
              ]
            },
            "sku": {
              "type": "object",
              "defaultValue": {
                "name": "S0"
              }
            },
            "allowedIpRules": {
              "type": "array",
              "defaultValue": []
            },
            "networkAcls": {
              "type": "object",
              "defaultValue": "[if(empty(parameters('allowedIpRules')), createObject('defaultAction', 'Allow'), createObject('ipRules', parameters('allowedIpRules'), 'defaultAction', 'Deny'))]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2023-05-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "[parameters('kind')]",
              "properties": {
                "customSubDomainName": "[parameters('customSubDomainName')]",
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "networkAcls": "[parameters('networkAcls')]"
              },
              "sku": "[parameters('sku')]"
            },
            {
              "copy": {
                "name": "deployment",
                "count": "[length(parameters('deployments'))]",
                "mode": "serial",
                "batchSize": 1
              },
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('name'), parameters('deployments')[copyIndex()].name)]",
              "properties": {
                "model": "[parameters('deployments')[copyIndex()].model]",
                "raiPolicyName": "[if(contains(parameters('deployments')[copyIndex()], 'raiPolicyName'), parameters('deployments')[copyIndex()].raiPolicyName, null())]"
              },
              "sku": "[if(contains(parameters('deployments')[copyIndex()], 'sku'), parameters('deployments')[copyIndex()].sku, createObject('name', 'Standard', 'capacity', 1))]",
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.CognitiveServices/accounts/{0}', parameters('name'))]",
              "name": "[guid(format('Cognitive Services OpenAI Contributor-{0}', parameters('suffix')))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'a001fd3d-188f-4b5d-821b-7da978bf7442')]",
                "principalId": "[parameters('managedIdentityPrincipalId')]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.CognitiveServices/accounts/{0}', parameters('name'))]",
              "name": "[guid(format('Cognitive Services OpenAI User-{0}', parameters('suffix')))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '5e0bd9bd-7b93-4f28-af87-19fc36ad61bd')]",
                "principalId": "[parameters('managedIdentityPrincipalId')]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "endpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2023-05-01').endpoint]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('managedidentity-{0}', parameters('suffix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('docIntel-{0}', parameters('suffix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "suffix": {
            "value": "[parameters('suffix')]"
          },
          "managedIdentityPrincipalId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('managedidentity-{0}', parameters('suffix'))), '2022-09-01').outputs.managedIdentityPrincipalId.value]"
          },
          "name": {
            "value": "[format('km-docIntel-{0}', parameters('suffix'))]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "sku": {
            "value": {
              "name": "S0"
            }
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "3584343383825170510"
            },
            "description": "Creates an Azure Document Intelligence (form recognizer) instance."
          },
          "parameters": {
            "suffix": {
              "type": "string",
              "defaultValue": "[uniqueString(resourceGroup().id)]"
            },
            "managedIdentityPrincipalId": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "customSubDomainName": {
              "type": "string",
              "defaultValue": "[parameters('name')]",
              "metadata": {
                "description": "The custom subdomain name used to access the API. Defaults to the value of the name parameter."
              }
            },
            "kind": {
              "type": "string",
              "defaultValue": "FormRecognizer"
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "Enabled",
              "allowedValues": [
                "Enabled",
                "Disabled"
              ]
            },
            "sku": {
              "type": "object",
              "defaultValue": {
                "name": "S0"
              }
            },
            "allowedIpRules": {
              "type": "array",
              "defaultValue": []
            },
            "networkAcls": {
              "type": "object",
              "defaultValue": "[if(empty(parameters('allowedIpRules')), createObject('defaultAction', 'Allow'), createObject('ipRules', parameters('allowedIpRules'), 'defaultAction', 'Deny'))]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2023-05-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "kind": "[parameters('kind')]",
              "properties": {
                "customSubDomainName": "[parameters('customSubDomainName')]",
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "networkAcls": "[parameters('networkAcls')]",
                "disableLocalAuth": true
              },
              "sku": "[parameters('sku')]"
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.CognitiveServices/accounts/{0}', parameters('name'))]",
              "name": "[guid(format('Cognitive Services User-{0}', parameters('suffix')))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'a97b65f3-24c7-4388-baec-2e87135dc908')]",
                "principalId": "[parameters('managedIdentityPrincipalId')]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "endpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2023-05-01').endpoint]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('managedidentity-{0}', parameters('suffix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('containerAppsEnvironment-{0}', parameters('suffix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "suffix": {
            "value": "[parameters('suffix')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "15906627962917124587"
            }
          },
          "parameters": {
            "suffix": {
              "type": "string",
              "defaultValue": "[uniqueString(resourceGroup().id)]"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location where the resources will be created."
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. The tags to be assigned to the created resources."
              }
            },
            "containerAppsEnvironmentName": {
              "type": "string",
              "defaultValue": "[format('km-cae-{0}', parameters('suffix'))]",
              "metadata": {
                "description": "The name of the container apps environment. If set, it overrides the name generated by the template."
              }
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "defaultValue": "[format('km-log-{0}', parameters('suffix'))]",
              "metadata": {
                "description": "The name of the log analytics workspace. If set, it overrides the name generated by the template."
              }
            },
            "applicationInsightsName": {
              "type": "string",
              "defaultValue": "[format('km-appins-{0}', parameters('suffix'))]",
              "metadata": {
                "description": " The name of the application insights. If set, it overrides the name generated by the template."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2021-06-01",
              "name": "[parameters('logAnalyticsWorkspaceName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "features": {
                  "searchVersion": 1
                },
                "sku": {
                  "name": "PerGB2018"
                },
                "retentionInDays": 30
              }
            },
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[parameters('applicationInsightsName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
              ]
            },
            {
              "type": "Microsoft.App/managedEnvironments",
              "apiVersion": "2022-10-01",
              "name": "[parameters('containerAppsEnvironmentName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "Consumption"
              },
              "properties": {
                "daprAIInstrumentationKey": "[reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').InstrumentationKey]",
                "appLogsConfiguration": {
                  "destination": "log-analytics",
                  "logAnalyticsConfiguration": {
                    "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), '2021-06-01').customerId]",
                    "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), '2021-06-01').primarySharedKey]"
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]",
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
              ]
            }
          ],
          "outputs": {
            "containerAppsEnvironmentName": {
              "type": "string",
              "value": "[parameters('containerAppsEnvironmentName')]"
            },
            "containerAppsEnvironmentId": {
              "type": "string",
              "value": "[resourceId('Microsoft.App/managedEnvironments', parameters('containerAppsEnvironmentName'))]"
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "value": "[parameters('logAnalyticsWorkspaceName')]"
            },
            "applicationInsightsName": {
              "type": "string",
              "metadata": {
                "description": "The name of the application insights."
              },
              "value": "[parameters('applicationInsightsName')]"
            },
            "applicationInsightsInstrumentationKey": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').InstrumentationKey]"
            },
            "applicationInsightsConnectionString": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').ConnectionString]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('containerAppService-{0}', parameters('suffix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "suffix": {
            "value": "[parameters('suffix')]"
          },
          "containerAppsEnvironmentId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('containerAppsEnvironment-{0}', parameters('suffix'))), '2022-09-01').outputs.containerAppsEnvironmentId.value]"
          },
          "appInsightsInstrumentationKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('containerAppsEnvironment-{0}', parameters('suffix'))), '2022-09-01').outputs.applicationInsightsInstrumentationKey.value]"
          },
          "applicationInsightsConnectionString": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('containerAppsEnvironment-{0}', parameters('suffix'))), '2022-09-01').outputs.applicationInsightsConnectionString.value]"
          },
          "managedIdentityId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('managedidentity-{0}', parameters('suffix'))), '2022-09-01').outputs.managedIdentityId.value]"
          },
          "managedIdentityClientId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('managedidentity-{0}', parameters('suffix'))), '2022-09-01').outputs.managedIdentityClientId.value]"
          },
          "KernelMemory__ServiceAuthorization__AccessKey1": {
            "value": "[parameters('WebServiceAuthorizationKey1')]"
          },
          "KernelMemory__ServiceAuthorization__AccessKey2": {
            "value": "[parameters('WebServiceAuthorizationKey2')]"
          },
          "AzureAISearch_Endpoint": {
            "value": "[format('https://{0}.search.windows.net', reference(resourceId('Microsoft.Resources/deployments', format('search-{0}', parameters('suffix'))), '2022-09-01').outputs.searchName.value)]"
          },
          "AzureBlobs_Account": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('storage-{0}', parameters('suffix'))), '2022-09-01').outputs.storageAccountName.value]"
          },
          "AzureQueues_Account": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('storage-{0}', parameters('suffix'))), '2022-09-01').outputs.storageAccountName.value]"
          },
          "AzureQueues_QueueName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('storage-{0}', parameters('suffix'))), '2022-09-01').outputs.queueName.value]"
          },
          "AzureOpenAIEmbedding_Deployment": {
            "value": "[variables('embedding').deploymentName]"
          },
          "AzureOpenAIEmbedding_Endpoint": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('openai-{0}', parameters('suffix'))), '2022-09-01').outputs.endpoint.value]"
          },
          "AzureOpenAIText_Deployment": {
            "value": "[variables('chatGpt').deploymentName]"
          },
          "AzureOpenAIText_Endpoint": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('openai-{0}', parameters('suffix'))), '2022-09-01').outputs.endpoint.value]"
          },
          "AzureAIDocIntel_Endpoint": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('docIntel-{0}', parameters('suffix'))), '2022-09-01').outputs.endpoint.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "1087801445927599681"
            }
          },
          "parameters": {
            "suffix": {
              "type": "string",
              "defaultValue": "[uniqueString(resourceGroup().id)]"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "managedIdentityId": {
              "type": "string"
            },
            "managedIdentityClientId": {
              "type": "string"
            },
            "kmServiceName": {
              "type": "string",
              "defaultValue": "[format('km-service-{0}', parameters('suffix'))]"
            },
            "containerAppsEnvironmentId": {
              "type": "string"
            },
            "appInsightsInstrumentationKey": {
              "type": "string"
            },
            "applicationInsightsConnectionString": {
              "type": "string"
            },
            "AzureBlobs_Account": {
              "type": "string"
            },
            "AzureQueues_Account": {
              "type": "string"
            },
            "AzureQueues_QueueName": {
              "type": "string"
            },
            "AzureAISearch_Endpoint": {
              "type": "string"
            },
            "AzureOpenAIText_Endpoint": {
              "type": "string"
            },
            "AzureOpenAIText_Deployment": {
              "type": "string"
            },
            "AzureOpenAIEmbedding_Endpoint": {
              "type": "string"
            },
            "AzureOpenAIEmbedding_Deployment": {
              "type": "string"
            },
            "AzureAIDocIntel_Endpoint": {
              "type": "string"
            },
            "KernelMemory__ServiceAuthorization__AccessKey1": {
              "type": "string"
            },
            "KernelMemory__ServiceAuthorization__AccessKey2": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.App/containerApps",
              "apiVersion": "2023-05-01",
              "name": "[parameters('kmServiceName')]",
              "location": "[parameters('location')]",
              "properties": {
                "environmentId": "[parameters('containerAppsEnvironmentId')]",
                "configuration": {
                  "secrets": [
                    {
                      "name": "appinsights-key",
                      "value": "[parameters('appInsightsInstrumentationKey')]"
                    }
                  ],
                  "registries": [],
                  "activeRevisionsMode": "Single",
                  "ingress": {
                    "external": true,
                    "transport": "Auto",
                    "allowInsecure": false,
                    "targetPort": 9001,
                    "stickySessions": {
                      "affinity": "none"
                    }
                  }
                },
                "template": {
                  "containers": [
                    {
                      "name": "kernelmemory-service",
                      "image": "docker.io/kernelmemory/service:latest",
                      "command": [],
                      "resources": {
                        "cpu": "[json('0.25')]",
                        "memory": "0.5Gi"
                      },
                      "env": [
                        {
                          "name": "ASPNETCORE_ENVIRONMENT",
                          "value": "Production"
                        },
                        {
                          "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                          "value": "[parameters('applicationInsightsConnectionString')]"
                        },
                        {
                          "name": "AZURE_CLIENT_ID",
                          "value": "[parameters('managedIdentityClientId')]"
                        },
                        {
                          "name": "KernelMemory__Service__OpenApiEnabled",
                          "value": "true"
                        },
                        {
                          "name": "KernelMemory__ContentStorageType",
                          "value": "AzureBlobs"
                        },
                        {
                          "name": "KernelMemory__TextGeneratorType",
                          "value": "AzureOpenAIText"
                        },
                        {
                          "name": "KernelMemory__DefaultIndexName",
                          "value": "default"
                        },
                        {
                          "name": "KernelMemory__ServiceAuthorization__Enabled",
                          "value": "true"
                        },
                        {
                          "name": "KernelMemory__ServiceAuthorization__AuthenticationType",
                          "value": "APIKey"
                        },
                        {
                          "name": "KernelMemory__ServiceAuthorization__HttpHeaderName",
                          "value": "Authorization"
                        },
                        {
                          "name": "KernelMemory__ServiceAuthorization__AccessKey1",
                          "value": "[parameters('KernelMemory__ServiceAuthorization__AccessKey1')]"
                        },
                        {
                          "name": "KernelMemory__ServiceAuthorization__AccessKey2",
                          "value": "[parameters('KernelMemory__ServiceAuthorization__AccessKey2')]"
                        },
                        {
                          "name": "KernelMemory__DataIngestion__DistributedOrchestration__QueueType",
                          "value": "AzureQueues"
                        },
                        {
                          "name": "KernelMemory__DataIngestion__EmbeddingGeneratorTypes__0",
                          "value": "AzureOpenAIEmbedding"
                        },
                        {
                          "name": "KernelMemory__DataIngestion__MemoryDbTypes__0",
                          "value": "AzureAISearch"
                        },
                        {
                          "name": "KernelMemory__DataIngestion__ImageOcrType",
                          "value": "AzureAIDocIntel"
                        },
                        {
                          "name": "KernelMemory__Retrieval__EmbeddingGeneratorType",
                          "value": "AzureOpenAIEmbedding"
                        },
                        {
                          "name": "KernelMemory__Retrieval__MemoryDbType",
                          "value": "AzureAISearch"
                        },
                        {
                          "name": "KernelMemory__Services__AzureBlobs__Account",
                          "value": "[parameters('AzureBlobs_Account')]"
                        },
                        {
                          "name": "KernelMemory__Services__AzureQueues__Account",
                          "value": "[parameters('AzureQueues_Account')]"
                        },
                        {
                          "name": "KernelMemory__Services__AzureQueues__QueueName",
                          "value": "[parameters('AzureQueues_QueueName')]"
                        },
                        {
                          "name": "KernelMemory__Services__AzureAISearch__Endpoint",
                          "value": "[parameters('AzureAISearch_Endpoint')]"
                        },
                        {
                          "name": "KernelMemory__Services__AzureOpenAIText__Endpoint",
                          "value": "[parameters('AzureOpenAIText_Endpoint')]"
                        },
                        {
                          "name": "KernelMemory__Services__AzureOpenAIText__Deployment",
                          "value": "[parameters('AzureOpenAIText_Deployment')]"
                        },
                        {
                          "name": "KernelMemory__Services__AzureOpenAIEmbedding__Endpoint",
                          "value": "[parameters('AzureOpenAIEmbedding_Endpoint')]"
                        },
                        {
                          "name": "KernelMemory__Services__AzureOpenAIEmbedding__Deployment",
                          "value": "[parameters('AzureOpenAIEmbedding_Deployment')]"
                        },
                        {
                          "name": "KernelMemory__Services__AzureAIDocIntel__Endpoint",
                          "value": "[parameters('AzureAIDocIntel_Endpoint')]"
                        }
                      ]
                    }
                  ],
                  "scale": {
                    "minReplicas": 1,
                    "maxReplicas": 1
                  }
                }
              },
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('managedIdentityId'))]": {}
                }
              }
            }
          ],
          "outputs": {
            "kmServiceName": {
              "type": "string",
              "value": "[parameters('kmServiceName')]"
            },
            "kmServiceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.App/containerApps', parameters('kmServiceName'))]"
            },
            "kmServiceAccessKey1": {
              "type": "string",
              "value": "[parameters('KernelMemory__ServiceAuthorization__AccessKey1')]"
            },
            "kmServiceAccessKey2": {
              "type": "string",
              "value": "[parameters('KernelMemory__ServiceAuthorization__AccessKey2')]"
            },
            "kmServiceFQDN": {
              "type": "string",
              "metadata": {
                "description": "The FQDN of the frontend web app service."
              },
              "value": "[reference(resourceId('Microsoft.App/containerApps', parameters('kmServiceName')), '2023-05-01').configuration.ingress.fqdn]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('containerAppsEnvironment-{0}', parameters('suffix')))]",
        "[resourceId('Microsoft.Resources/deployments', format('docIntel-{0}', parameters('suffix')))]",
        "[resourceId('Microsoft.Resources/deployments', format('managedidentity-{0}', parameters('suffix')))]",
        "[resourceId('Microsoft.Resources/deployments', format('openai-{0}', parameters('suffix')))]",
        "[resourceId('Microsoft.Resources/deployments', format('search-{0}', parameters('suffix')))]",
        "[resourceId('Microsoft.Resources/deployments', format('storage-{0}', parameters('suffix')))]"
      ]
    }
  ],
  "outputs": {
    "kmServiceEndpoint": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the frontend web app service."
      },
      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('containerAppService-{0}', parameters('suffix'))), '2022-09-01').outputs.kmServiceFQDN.value]"
    },
    "kmServiceAccessKey1": {
      "type": "string",
      "metadata": {
        "description": "Service Access Key 1."
      },
      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('containerAppService-{0}', parameters('suffix'))), '2022-09-01').outputs.kmServiceAccessKey1.value]"
    },
    "kmServiceAccessKey2": {
      "type": "string",
      "metadata": {
        "description": "Service Access Key 2."
      },
      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('containerAppService-{0}', parameters('suffix'))), '2022-09-01').outputs.kmServiceAccessKey2.value]"
    }
  }
}